{"ast":null,"code":"var _jsxFileName = \"/Users/irfhuss/Desktop/project348/frontend/src/components/TodoList/TodoList.js\";\n// import React from 'react'\n// import axios from '../../axios'\n// import { ListContainer, Row, Text, DeleteIcon } from './stylesTodoList'\n\n// function TodoList({todos, fetchData}) {\n//     console.log(\"TODOS HERE\", todos)\n//     const updateTodo = async (id) => {\n//         try {\n//             const response = await axios.put(`/todos/${id}`, {\n//                 id\n//             })\n//             fetchData()\n//             return response.data.json\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     }\n\n//     const deleteTodo = async (id) => {\n//         try {\n//             const response = await axios.delete(`/todos/${id}`, {\n//                 id\n//             })\n//             fetchData()\n//             return response.data.json\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     }\n\n//   return (\n//     <div>\n//         <ListContainer>\n//             {}\n//             {todos?.map((todo) => (\n//                 <Row key={todo._id}>\n//                     <Text onClick={() => updateTodo(todo._id)}\n//                         isCompleted={todo.completed}>\n//                     {todo.text}\n//                     </Text>\n//                     <DeleteIcon onClick={() => deleteTodo(todo._id)}>delete task</DeleteIcon>\n//                 </Row>\n//             ))}\n//         </ListContainer>\n//     </div>\n//   );\n// }\n\n// export default TodoList\n// import React from 'react';\n// import axios from '../../axios';\n// import { ListContainer, Row, Text, DeleteIcon } from './stylesTodoList';\n\n// function TodoList({ todos, fetchData }) {\n//     const updateTodo = async (id) => {\n//         try {\n//             const response = await axios.put(`/todos/${id}`, { id });\n//             fetchData();\n//             return response.data.json;\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     };\n\n//     const deleteTodo = async (id) => {\n//         try {\n//             const response = await axios.delete(`/todos/${id}`, { id });\n//             fetchData();\n//             return response.data.json;\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <ListContainer>\n//                 {todos?.map((todo) => (\n//                     <Row key={todo._id}>\n//                         <Text\n//                             onClick={() => updateTodo(todo._id)}\n//                             isCompleted={todo.completed}\n//                         >\n//                             {todo.text} - <strong>{todo.priority}</strong>\n//                         </Text>\n//                         <DeleteIcon onClick={() => deleteTodo(todo._id)}>\n//                             delete task\n//                         </DeleteIcon>\n//                     </Row>\n//                 ))}\n//             </ListContainer>\n//         </div>\n//     );\n// }\n\n// export default TodoList;\n\nimport React from 'react';\nimport axios from '../../axios';\nimport { ListContainer, Row, Text, DeleteIcon } from './stylesTodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList({\n  todos,\n  fetchData\n}) {\n  // const toggleComplete = async (id, currentStatus) => {\n  //     try {\n  //         // Toggle the completed status\n  //         await axios.put(`/todos/${id}`, {\n  //             completed: !currentStatus,\n  //         });\n  //         fetchData(); // Refresh the task list\n  //     } catch (err) {\n  //         console.error('Error toggling task completion:', err.message);\n  //     }\n  // };\n\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`/todos/${id}`);\n      fetchData();\n    } catch (err) {\n      console.error('Error deleting task:', err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: todos === null || todos === void 0 ? void 0 : todos.map(todo => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        onClick: () => toggleComplete(todo._id, todo.completed),\n        style: {\n          textDecoration: todo.completed ? 'line-through' : 'none',\n          // Strike-through if completed\n          color: todo.completed ? 'red' : 'black',\n          // Red if completed\n          cursor: 'pointer' // Add a pointer cursor for better UX\n        },\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        onClick: () => deleteTodo(todo._id),\n        children: \"delete task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","axios","ListContainer","Row","Text","DeleteIcon","jsxDEV","_jsxDEV","TodoList","todos","fetchData","deleteTodo","id","delete","err","console","error","message","children","map","todo","onClick","toggleComplete","_id","completed","style","textDecoration","color","cursor","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irfhuss/Desktop/project348/frontend/src/components/TodoList/TodoList.js"],"sourcesContent":["// import React from 'react'\n// import axios from '../../axios'\n// import { ListContainer, Row, Text, DeleteIcon } from './stylesTodoList'\n\n// function TodoList({todos, fetchData}) {\n//     console.log(\"TODOS HERE\", todos)\n//     const updateTodo = async (id) => {\n//         try {\n//             const response = await axios.put(`/todos/${id}`, {\n//                 id\n//             })\n//             fetchData()\n//             return response.data.json\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     }\n\n//     const deleteTodo = async (id) => {\n//         try {\n//             const response = await axios.delete(`/todos/${id}`, {\n//                 id\n//             })\n//             fetchData()\n//             return response.data.json\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     }\n\n//   return (\n//     <div>\n//         <ListContainer>\n//             {}\n//             {todos?.map((todo) => (\n//                 <Row key={todo._id}>\n//                     <Text onClick={() => updateTodo(todo._id)}\n//                         isCompleted={todo.completed}>\n//                     {todo.text}\n//                     </Text>\n//                     <DeleteIcon onClick={() => deleteTodo(todo._id)}>delete task</DeleteIcon>\n//                 </Row>\n//             ))}\n//         </ListContainer>\n//     </div>\n//   );\n// }\n\n// export default TodoList\n// import React from 'react';\n// import axios from '../../axios';\n// import { ListContainer, Row, Text, DeleteIcon } from './stylesTodoList';\n\n// function TodoList({ todos, fetchData }) {\n//     const updateTodo = async (id) => {\n//         try {\n//             const response = await axios.put(`/todos/${id}`, { id });\n//             fetchData();\n//             return response.data.json;\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     };\n\n//     const deleteTodo = async (id) => {\n//         try {\n//             const response = await axios.delete(`/todos/${id}`, { id });\n//             fetchData();\n//             return response.data.json;\n//         } catch (err) {\n//             console.error(err.message);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <ListContainer>\n//                 {todos?.map((todo) => (\n//                     <Row key={todo._id}>\n//                         <Text\n//                             onClick={() => updateTodo(todo._id)}\n//                             isCompleted={todo.completed}\n//                         >\n//                             {todo.text} - <strong>{todo.priority}</strong>\n//                         </Text>\n//                         <DeleteIcon onClick={() => deleteTodo(todo._id)}>\n//                             delete task\n//                         </DeleteIcon>\n//                     </Row>\n//                 ))}\n//             </ListContainer>\n//         </div>\n//     );\n// }\n\n// export default TodoList;\n\nimport React from 'react';\nimport axios from '../../axios';\nimport { ListContainer, Row, Text, DeleteIcon } from './stylesTodoList';\n\nfunction TodoList({ todos, fetchData }) {\n    // const toggleComplete = async (id, currentStatus) => {\n    //     try {\n    //         // Toggle the completed status\n    //         await axios.put(`/todos/${id}`, {\n    //             completed: !currentStatus,\n    //         });\n    //         fetchData(); // Refresh the task list\n    //     } catch (err) {\n    //         console.error('Error toggling task completion:', err.message);\n    //     }\n    // };\n\n    const deleteTodo = async (id) => {\n        try {\n            await axios.delete(`/todos/${id}`);\n            fetchData();\n        } catch (err) {\n            console.error('Error deleting task:', err.message);\n        }\n    };\n\n    return (\n        <ListContainer>\n            {todos?.map((todo) => (\n                <Row key={todo._id}>\n                    <Text\n                        onClick={() => toggleComplete(todo._id, todo.completed)}\n                        style={{\n                            textDecoration: todo.completed ? 'line-through' : 'none', // Strike-through if completed\n                            color: todo.completed ? 'red' : 'black', // Red if completed\n                            cursor: 'pointer', // Add a pointer cursor for better UX\n                        }}\n                    >\n                        {todo.text}\n                    </Text>\n                    <DeleteIcon onClick={() => deleteTodo(todo._id)}>delete task</DeleteIcon>\n                </Row>\n            ))}\n        </ListContainer>\n    );\n}\n\nexport default TodoList;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,aAAa,EAAEC,GAAG,EAAEC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAU,CAAC,EAAE;EACpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACA,MAAMX,KAAK,CAACY,MAAM,CAAC,UAAUD,EAAE,EAAE,CAAC;MAClCF,SAAS,CAAC,CAAC;IACf,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAACG,OAAO,CAAC;IACtD;EACJ,CAAC;EAED,oBACIV,OAAA,CAACL,aAAa;IAAAgB,QAAA,EACTT,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,GAAG,CAAEC,IAAI,iBACbb,OAAA,CAACJ,GAAG;MAAAe,QAAA,gBACAX,OAAA,CAACH,IAAI;QACDiB,OAAO,EAAEA,CAAA,KAAMC,cAAc,CAACF,IAAI,CAACG,GAAG,EAAEH,IAAI,CAACI,SAAS,CAAE;QACxDC,KAAK,EAAE;UACHC,cAAc,EAAEN,IAAI,CAACI,SAAS,GAAG,cAAc,GAAG,MAAM;UAAE;UAC1DG,KAAK,EAAEP,IAAI,CAACI,SAAS,GAAG,KAAK,GAAG,OAAO;UAAE;UACzCI,MAAM,EAAE,SAAS,CAAE;QACvB,CAAE;QAAAV,QAAA,EAEDE,IAAI,CAACS;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACP1B,OAAA,CAACF,UAAU;QAACgB,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACS,IAAI,CAACG,GAAG,CAAE;QAAAL,QAAA,EAAC;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA,GAXnEb,IAAI,CAACG,GAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAExB;AAACC,EAAA,GAzCQ1B,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}